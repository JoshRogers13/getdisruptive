// ---------------------------------------------------------------------------
// Money format handler
// ---------------------------------------------------------------------------
var formatMoney = function(cents, format) {
  if (typeof cents == 'string') { cents = cents.replace('.',''); }
  var value = '';
  var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
  var formatString = (format || this.money_format);

  function defaultOption(opt, def) {
     return (typeof opt == 'undefined' ? def : opt);
  }

  function formatWithDelimiters(number, precision, thousands, decimal) {
    precision = defaultOption(precision, 2);
    thousands = defaultOption(thousands, ',');
    decimal   = defaultOption(decimal, '.');

    if (isNaN(number) || number == null) { return 0; }

    number = (number/100.0).toFixed(precision);

    var parts   = number.split('.'),
        dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
        cents   = parts[1] ? (decimal + parts[1]) : '';

    return dollars + cents;
  }

  switch(formatString.match(placeholderRegex)[1]) {
    case 'amount':
      value = formatWithDelimiters(cents, 2);
      break;
    case 'amount_no_decimals':
      value = formatWithDelimiters(cents, 0);
      break;
    case 'amount_with_comma_separator':
      value = formatWithDelimiters(cents, 2, '.', ',');
      break;
    case 'amount_no_decimals_with_comma_separator':
      value = formatWithDelimiters(cents, 0, '.', ',');
      break;
  }

  return formatString.replace(placeholderRegex, value);
};


$(() => {

  const form = $('.bundle-products');

  form.on('submit', event => {
    event.preventDefault();

    const formData = form.serializeArray();

    const options = formData.filter(function(data) {
        return data.name.startsWith('bundle') || data.name === 'id';
    });

    const items = options.map(function(option) {
        return {
            id: option.value,
            quantity: 1
        };
    });

    console.log(items);

    // Add selected products to cart.
    const addToCart = fetch('/cart/add.js', {
        method: 'POST',
        body: JSON.stringify({ items }),
        credentials: 'same-origin',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With':'xmlhttprequest'
        }
    });

    // After product(s) have been added to cart.
    addToCart.then(async response => {
        // If we've successfully added to cart.
        if (response.ok) {
            // Go to cart page.
            window.location.assign('/cart');

            // Stop execution.
            return;
        }

        // Get response data.
        const { description } = await response.json();

        // Only throw an error if we haven't successfully added to cart.
        throw new Error(description);
    }).catch(error => {
        // If there's an error - show it to user.
        console.log('error');
    });
  });
});